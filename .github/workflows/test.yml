name: Python application

on:
  push:
    branches: [ unit-testing]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: github_actions_testing
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.9
      uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Setting up FLASK_APP
      run: |
        # export FLASK_APP=api/__init__.py
        echo "FLASK_APP=migration/__init__.py" >> $GITHUB_ENV

    - name: Setting up env for testing
      env:
            DB_HOST: 127.0.0.1
            DB_PORT: 5432
            DB_NAME: github_actions_testing
            DB_USER: postgres
            DB_PASSWORD: postgres
    - name: Migrations
      run: |
        flask migrate

    # - name: Upgrade DB
    #   run: |
    #     flask db upgrade

    - name: Seed
      run: |
        flask db seed

    - name: Test with pytest
      run: |
        pytest
